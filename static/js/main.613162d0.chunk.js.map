{"version":3,"sources":["Components/About.js","Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","useState","color","backgroundColor","setColor","btn","setBtn","style","className","about","id","type","onClick","defaultProps","Alert","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","msg","Navbar","mode","to","title","toggleMode","htmlFor","TextForm","text","setText","heading","rows","value","onChange","event","target","onCopy","navigator","clipboard","writeText","showAlert","newText","split","join","length","trim","App","setMode","setalert","message","setTimeout","params","document","body","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.613162d0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction About(props) {\n  const myStyle={\n    color:'black',\n    backgroundColor:'white'\n  }\n  const [color, setColor] = useState(myStyle);\n  const [btn, setBtn] = useState(\"Enable Dark Mode\");\n  const enableDark = () => {\n    if(color.color==='black'){\n      setColor({\n        color:'white',\n        backgroundColor:'black'\n      })\n      setBtn(\"Enable light Mode\");\n    }else{\n      setColor({\n        color:'black',\n        backgroundColor:'white'\n      })\n      setBtn(\"Enable Dark Mode\");\n    }\n  }\n \n  return (\n    <div style={color} className=\"container rounded\">\n      <h2 className=\"my-2\">{props.about}</h2>\n      <div className=\"accordion accordion-flush text-dark\" id=\"accordionFlushExample\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"flush-headingOne\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseOne\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseOne\" style={color}\n            >\n              React js Tutorial\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseOne\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingOne\"\n            data-bs-parent=\"#accordionFlushExample\"\n          >\n            <div className=\"accordion-body\">\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> className. This is the\n              first item's accordion body.\n              Lorem ipsum dolor sit amet, consectetur adipisicing elit. Minus consectetur, officia nesciunt atque deleniti ex quisquam dicta blanditiis praesentium molestias natus repudiandae odit dolore sit doloremque. Necessitatibus corrupti quos pariatur!\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"flush-headingTwo\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseTwo\" style={color}\n            >\n              Angular Js Tutorial\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingTwo\"\n            data-bs-parent=\"#accordionFlushExample\"\n          >\n            <div className=\"accordion-body\">\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> className. This is the\n              second item's accordion body. Let's imagine this being filled with\n              some actual content. Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt corrupti error dolorem, repudiandae est magnam! Harum, exercitationem quasi laborum animi magnam, quos vero architecto omnis quam dolorum error maxime sunt.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"flush-headingThree\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#flush-collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"flush-collapseThree\" style={color}\n            >\n              Vue Js Tutorial\n            </button>\n          </h2>\n          <div\n            id=\"flush-collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"flush-headingThree\"\n            data-bs-parent=\"#accordionFlushExample\"\n          >\n            <div className=\"accordion-body\">\n              Placeholder content for this accordion, which is intended to\n              demonstrate the <code>.accordion-flush</code> className. This is the\n              third item's accordion body. Nothing more exciting happening here\n              in terms of content, but just filling up the space to make it\n              look, at least at first glance, a bit more representative of how\n              this would look in a real-world application.\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container my-4\">\n      <button className=\"btn btn-secondary\" onClick={enableDark}>{btn}</button><br /><br />\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n\nAbout.defaultProps = {\n  about: \"About Us\",\n};\n","import React from \"react\";\n\nfunction Alert(props) {\n  const Capitalize = (word) => {\n    const lower=word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  }\n  return (\n   props.alert&& <div\n      className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n      role=\"alert\">\n       <strong>{Capitalize(props.alert.type)}</strong> : {props.alert.msg}\n    </div>\n  );\n}\n\nexport default Alert;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from 'react-router-dom';\nfunction Navbar(props) {\n  return (\n    <div>\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            {props.title}\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">\n                  {props.about}\n                </Link>\n              </li>\n            </ul>\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode Enable</label>\n          </div>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nNavbar.defaultProps = {\n  about: \"About Us\",\n};\n","import React, { useState } from \"react\";\n\nfunction TextForm(props) {\n  const [text, setText] = useState(\" \");\n  const handleUp=()=>{\n      setText(text.toUpperCase());\n      props.showAlert(\"Uppercase is enabled!\",\"success\")\n      }\n  const handleOnchange=(event)=>{\n    setText(event.target.value);\n  }\n  const handleLow=()=>{\n    setText(text.toLowerCase())\n    props.showAlert(\"Lowercase is enabled!\",\"success\")\n  }\n  const ClearText=()=>{\n    setText(\" \");\n    props.showAlert(\"Text cleared!\",\"danger\")\n  }\n  const CopyText=()=>{\n    navigator.clipboard.writeText(text);\n    // alert(\"Text Copied successfully\");\n    navigator.clipboard.writeText(text)\n    props.showAlert(\"Text coppied!\",\"success\")\n  }\n  const handleSpace = () => {\n    let newText=text.split(/[ ]+/);\n    setText(newText.join(\" \"))\n    props.showAlert(\"Extra space removed!\",\"success\")\n  }\n  return (\n    <>\n    <div>\n      <h1>{props.heading}</h1>\n      <div className=\"mb-3\">\n        <textarea className=\"form-control\" id=\"myBox\" rows=\"6\" value={text}\n        onChange={handleOnchange}\n        onCopy={CopyText}\n        style={{backgroundColor:props.mode==='light'?'white':'#3f30b2'}}></textarea>\n      </div>\n      <button className=\"btn btn-primary mx-2\" onClick={handleUp}>Convert to Uppercase</button>\n      <button className=\"btn btn-primary mx-2\" onClick={handleLow}>Convert to Lowercase</button>\n      <button className=\"btn btn-primary mx-2\" onClick={ClearText}>Clear Text</button>\n      <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>handleExtraspace</button>\n    </div>\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'dark'}}>\n      <h2>Your text summary</h2>\n      <p><b>{text.length>0 ? text.trim().split(\" \").length : 0}</b> Words, <b>{text.length} </b>Characters</p>\n      <p><b>{0.008*text.split(\" \").length} </b>Minute read</p>\n      <h3>Preview</h3>\n      <p>{text.length>0?text:\"Enter Something in the textbox above to preview it\"}</p><br />\n    </div>\n    </>\n  );\n}\n\nexport default TextForm;\n","import React, { useState } from 'react'\nimport About from './Components/About'\nimport Alert from './Components/Alert';\nimport Navbar from './Components/Navbar'\nimport TextForm from './Components/TextForm'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from 'react-router-dom';\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showAlert = (message,type) => {\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  const toggleMode = (params) => {\n    if(mode===\"dark\"){\n      setMode(\"light\");\n      document.body.style.backgroundColor=\"#fff\";\n      showAlert(\"White mode is enabled!\",\"success\");\n      document.title=\"TextUtiles- light mode!\";\n\n  }else{\n    setMode(\"dark\")\n    document.body.style.backgroundColor=\"#3f30b2\";\n    showAlert(\"Dark mode is enabled!\",\"success\");\n    document.title=\"TextUtiles- dark mode!\";\n  };\n  }\n  return (\n    <Router>\n      <>\n      <Navbar title=\"TextUtiles\" mode={mode} toggleMode={toggleMode}/>\n         <Alert alert={alert}/>\n         <div className=\"container my-5\">\n          <Routes>\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>} />\n          <Route exact path=\"/about\" element={<About />} />\n          </Routes>\n         </div>\n         </>\n     </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}